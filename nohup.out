
> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 03:04:25 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `w3cebsgum5p7xrdx`
App listening on PORT 3000
/ get request received
/ get request received
/ get request received

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 04:34:38 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `w3cebsgum5p7xrdx`
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::80
    at Object._errnoException (util.js:1022:11)
    at _exceptionWithHostPort (util.js:1044:20)
    at Server.setupListenHandle [as _listen2] (net.js:1351:14)
    at listenInCluster (net.js:1392:12)
    at Server.listen (net.js:1476:7)
    at Function.listen (/var/www/seven_brackets/node_modules/express/lib/application.js:618:24)
    at /var/www/seven_brackets/server.js:41:7
    at tryCatcher (/var/www/seven_brackets/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:693:18)
    at Async._drainQueue (/var/www/seven_brackets/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/var/www/seven_brackets/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues [as _onImmediate] (/var/www/seven_brackets/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:789:20)
    at tryOnImmediate (timers.js:751:5)
    at processImmediate [as _immediateCallback] (timers.js:722:5)
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T04_34_39_388Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 04:35:59 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `w3cebsgum5p7xrdx`
App listening on PORT 80
/ get request received
/ get request received
/ get request received
/ get request received
/ get request received
/ get request received
/profile get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/ get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/ get request received
/ get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/ get request received
/ get request received
/ get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T05_23_20_715Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 12:46:17 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `w3cebsgum5p7xrdx`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/profile get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/ get request received
/ get request received
/ get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads/1 get request received
Executing (default): SELECT `id`, `body`, `solved`, `createdAt`, `updatedAt`, `CategoryId`, `UserId` FROM `Threads` AS `Thread` WHERE `Thread`.`CategoryId` = '1';
/api/threads/1 get request received
Executing (default): SELECT `id`, `body`, `solved`, `createdAt`, `updatedAt`, `CategoryId`, `UserId` FROM `Threads` AS `Thread` WHERE `Thread`.`CategoryId` = '1';
/ get request received
/ get request received
/ get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T13_28_37_819Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 13:28:43 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `w3cebsgum5p7xrdx`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/profile get request received
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T13_34_14_640Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 13:38:53 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `w3cebsgum5p7xrdx`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T13_42_03_935Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 13:42:07 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `w3cebsgum5p7xrdx`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[]

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 13:47:56 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `w3cebsgum5p7xrdx`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[]
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T13_48_36_830Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 13:48:45 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Unhandled rejection SequelizeConnectionRefusedError: connect ECONNREFUSED 127.0.0.1:3306
    at Utils.Promise.tap.then.catch.err (/var/www/seven_brackets/node_modules/sequelize/lib/dialects/mysql/connection-manager.js:139:19)
    at tryCatcher (/var/www/seven_brackets/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/var/www/seven_brackets/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/var/www/seven_brackets/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/var/www/seven_brackets/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:789:20)
    at tryOnImmediate (timers.js:751:5)
    at processImmediate [as _immediateCallback] (timers.js:722:5)

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 13:49:22 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Unhandled rejection SequelizeConnectionRefusedError: connect ECONNREFUSED 127.0.0.1:3306
    at Utils.Promise.tap.then.catch.err (/var/www/seven_brackets/node_modules/sequelize/lib/dialects/mysql/connection-manager.js:139:19)
    at tryCatcher (/var/www/seven_brackets/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/var/www/seven_brackets/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/var/www/seven_brackets/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/var/www/seven_brackets/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:789:20)
    at tryOnImmediate (timers.js:751:5)
    at processImmediate [as _immediateCallback] (timers.js:722:5)
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T13_49_24_288Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 13:49:29 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Unhandled rejection SequelizeConnectionRefusedError: connect ECONNREFUSED 127.0.0.1:3306
    at Utils.Promise.tap.then.catch.err (/var/www/seven_brackets/node_modules/sequelize/lib/dialects/mysql/connection-manager.js:139:19)
    at tryCatcher (/var/www/seven_brackets/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:689:18)
    at Async._drainQueue (/var/www/seven_brackets/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/var/www/seven_brackets/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues (/var/www/seven_brackets/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:789:20)
    at tryOnImmediate (timers.js:751:5)
    at processImmediate [as _immediateCallback] (timers.js:722:5)

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 13:50:26 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/api/threads/23 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
/api/threads/25 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '25';
/api/threads/27 get request received
/api/threads/28 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '28';
/ get request received
/ get request received

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 16:11:26 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/api/threads/23 get request received
/api/threads/25 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '25';
/api/threads/28 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '28';
/api/threads/1 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '1';
/api/threads/25 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '25';
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/2 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '2';
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/api/threads/23 get request received
/api/threads/25 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '25';
/api/threads/27 get request received
/api/threads/28 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '28';
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T16_12_32_613Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 16:12:35 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/api/threads/23 get request received
/api/threads/25 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '25';
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/28 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '28';
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/api/threads/23 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
/api/threads/25 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '25';
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/28 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '28';
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T16_18_18_732Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 16:18:20 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/ get request received
/ get request received
/ get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/api/threads/2 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '2';
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/api/threads/1 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '1';
/api/threads/2 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '2';
/api/threads/3 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '3';
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/ get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/ get request received
/ get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/api/threads/1 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '1';
/api/threads/3 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '3';
/api/threads/1 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '1';
/api/threads/1 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '1';
/api/threads/1 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '1';
/api/threads/1 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '1';
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T19_01_54_913Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 19:01:58 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/api/threads/1 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '1';
/api/threads/2 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '2';
/api/threads/3 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '3';
/api/threads/4 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '4';
/api/threads/5 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '5';
/api/threads/6 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '6';
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/api/threads/1 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '1';
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/api/threads/1 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '1';
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ] },
  Thread {
    dataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _previousDataValues: 
     { id: 25,
       body: 'I need help now please!',
       solved: false,
       createdAt: Invalid Date,
       updatedAt: Invalid Date,
       CategoryId: 1,
       UserId: 6,
       User: [Object],
       Replies: [Array] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [ [Object], [Object] ] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 28,
       body: 'asdfasdfadsfadsf',
       solved: false,
       createdAt: 2018-03-02T02:42:57.000Z,
       updatedAt: 2018-03-02T02:42:57.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/profile get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/ get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T19_23_34_081Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 19:23:38 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T19_29_23_274Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 19:29:26 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T19_30_51_943Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 19:30:57 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/api/threads/23 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
/api/threads/27 get request received
/api/threads/29 get request received
/api/threads/30 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
/api/threads/31 get request received
/api/threads/32 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
/api/threads/34 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
/api/threads/35 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
/api/threads/36 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
/api/threads/37 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
/api/threads/39 get request received
/api/threads/40 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
/api/threads/41 get request received
/api/threads/42 get request received
/api/threads/43 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
/api/threads/44 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
/api/threads/45 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
/api/threads/46 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
/api/threads/47 get request received
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T19_33_11_107Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 19:33:16 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/api/threads/23 get request received
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/29 get request received
/api/threads/30 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
/api/threads/31 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
/api/threads/32 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
/api/threads/34 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
/api/threads/35 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
/api/threads/36 get request received
/api/threads/37 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
/api/threads/39 get request received
/api/threads/40 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
/api/threads/41 get request received
/api/threads/42 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
/api/threads/43 get request received
/api/threads/44 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
/api/threads/45 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
/api/threads/46 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
/api/threads/47 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/api/threads/23 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/30 get request received
/api/threads/29 get request received
/api/threads/31 get request received
/api/threads/32 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
/api/threads/34 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
/api/threads/35 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
/api/threads/36 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
/api/threads/37 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
/api/threads/41 get request received
/api/threads/39 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
/api/threads/40 get request received
/api/threads/42 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
/api/threads/43 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
/api/threads/44 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
/api/threads/46 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
/api/threads/45 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
/api/threads/48 get request received
/api/threads/47 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
[ Thread {
    dataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 23,
       body: 'I think my spouse is having an affair and I don\'t know how to approach her about it.',
       solved: false,
       createdAt: 2018-02-28T22:19:09.000Z,
       updatedAt: 2018-03-02T13:24:03.000Z,
       CategoryId: 3,
       UserId: 7,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 27,
       body: 'Hey everyone. I just switched jobs, and, in doing so, increased my salary significantly. I\'m looking for some direction on how/where/how much I should invest. Any help would be greatly appreciated.',
       solved: false,
       createdAt: 2018-03-02T02:33:53.000Z,
       updatedAt: 2018-03-02T02:33:53.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 29,
       body: 'My partner and I run a business together and also recently purchased property together. I have been aware for awhile now that I am very unhappy in the relationship and have tried to leave in the past. He becomes extremely angry and we cannot talk through the splitting process. He has managed to convince me that my desire to leave is irrational and has absolutely refused to break up. It feels like, if I want to leave him, I need to totally abandon all of the assets from the business and lose my investment in our land. Does anyone have any experience with this?',
       solved: false,
       createdAt: 2018-03-02T17:46:24.000Z,
       updatedAt: 2018-03-02T17:46:24.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 30,
       body: 'I bought around ~5k of bitcoin on coinbase in various intervals in 2017. After buying the bitcoin I would immediately send the coin to online sports books and casinos. Sometimes I would win and send it back to my coinbase account (and on the rare occasion send it back to my bank account), but I definitely lost a majority of the bitcoin to those sites\n\nNow that it’s tax time I’m concerned on how and what I should file. I’m trying to make sure I report information that I need to.',
       solved: false,
       createdAt: 2018-03-02T17:58:07.000Z,
       updatedAt: 2018-03-02T17:58:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 31,
       body: 'I know this is a common problem, but I\'m honestly really afraid of the future right now, as I can\'t seem to find a way to pay for my continued treatment and medication. Long story short, I can\'t afford insurance, but I also can\'t afford to see and counselor, a psychiatrist, and $200 of medication a month. And I\'m honestly terrified. I\'m trying to see if I can survive off my meds, but it isn\'t looking so good. I don\'t want to have another break down, and rack up another substantial hospital fee. (I paid my medical debt off already.)\n\nI could really use some advice. I live alone, have no family, and no one to help me with this kind of thing. Web results all tell me to apply for Medicaid/Medicare, but I make "too much" money to qualify.',
       solved: false,
       createdAt: 2018-03-02T18:01:20.000Z,
       updatedAt: 2018-03-02T18:01:20.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 32,
       body: 'I cut off all contact with my Mom in October/November 2017. On Christmas, my Mom called cops and asked them to do a wellness check on me because I have a history of mental health issues (have never attempted suicide but am being treated for anxiety & depression). Then just a little bit ago (around 2:30 AM) got woken up by 3 police officers because someone called saying I was fighting with my fiancee (I live alone, never been engaged, broke up with my partner just before Thanksgiving and are on good terms, not dating anyone else). They said it\'s possible they had the wrong address but the female cop asked "were we here about one or two months ago?" I said yes and she asked what it was about and I said that my mother is mad at me for not talking to her anymore. So the fact that they looked up past visits seems to me like they knew they had the right address.\n\nI texted my brother (who is supportive of me and occasionally keeps in touch with Mom), but idk what else to do to get this to stop. I plan to talk to someone at police station tomorrow, too, to try to get more details, but if anyone has any other suggestions, I\'d appreciate it.',
       solved: false,
       createdAt: 2018-03-02T18:04:26.000Z,
       updatedAt: 2018-03-02T18:04:26.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 34,
       body: 'i recently started blogging about my yoga teacher training. most of the posts are about the technical training, but a lot of the posts have snippets of the reasoning behind the training and what i\'m getting from it mentally. my family is paying more attention to the depression side rather than focusing on what i\'m doing to heal myself. i\'m trying to shrug it off, but i just want them to see that this is a good thing. \n\n\ni know that i\'m not going to be able to change their minds. so how do i change my own to ignore their negativity?',
       solved: false,
       createdAt: 2018-03-02T18:07:07.000Z,
       updatedAt: 2018-03-02T18:07:07.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 35,
       body: 'I currently feel really bad, it\'s the second or third week I\'ve been feeling this way. I\'m never really happy and sometimes feel strong urges to harm myself and usually act on them. I feel so weak and powerless that i called in sick the second day in a row even though I\'m physically healthy. In the past I had a few phases like that including acute substance abuse problems. My psychologist tells me I\'m alright and my parents say that I\'m just whiny. I don\'t really know who to believe and what to do. Got any advice?',
       solved: false,
       createdAt: 2018-03-02T18:08:54.000Z,
       updatedAt: 2018-03-02T18:08:54.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 36,
       body: 'I am a 20 year old who attends community college full-time and works a part-time job. I still live at home with my parents, who are generally very supportive and nice to me. They help me pay for college and let me live at home rent free. Their only condition is that as long as I live under their roof, I follow their rules and do my portion of the household chores. The condition for them paying part of my tuition is that I get good grades. That’s all fine and perfectly acceptable to me. It’s a pretty sweet deal actually. However, my parents are firm believers in corporal punishment: If I ever break any of their rules, don’t do my chores to their satisfaction, or receive a single poor grade, I still get spanked like when I was a child. Just yesterday I got my butt paddled for forgetting to take out the garbage can and recycling bin on pickup day.\n\nNeedless to say, I am very unhappy with this part of our arrangement. I find it extremely humiliating to be physically punished like that. I am technically an adult, after all! Really the only way to get away from this, is for me to move out and stop accepting financial support from them. This is something I don’t think I can currently afford. My part-time job pays just enough to cover my portion of my tuition, and I really don’t want to take out student loans (I plan on transferring to a four year institution after finishing up community college, so I possibly will need to take out a few loans in the near future, even though my parents have already said they’d consider continuing paying part of my tuition).\n\nWhat can I do? Again, I love my parents and we generally have a decent relationship. I truly appreciate their support and really like living in their house for the most part. I just don’t want to be spanked anymore!',
       solved: false,
       createdAt: 2018-03-02T18:12:00.000Z,
       updatedAt: 2018-03-02T18:12:00.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 37,
       body: 'I want to get up and go for a jog but I keep talking myself out of it. Has anyone ever faced this conflict before? How did you over come it? Im tired of being so lazy and overweight, but i just cant get over that tendency to talk myself out of it.',
       solved: false,
       createdAt: 2018-03-02T18:13:42.000Z,
       updatedAt: 2018-03-02T18:13:42.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 39,
       body: 'I try to do 100 push-ups everyday and I make an attempt to walk around as much as possible at work. I’m looking to use my downtime at work for something useful. Any suggestions?',
       solved: false,
       createdAt: 2018-03-02T18:28:48.000Z,
       updatedAt: 2018-03-02T18:28:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 40,
       body: 'Hi! I live on the east coast of the US and am looking for someone who can help me understand some organic chem concepts. I was hoping to be able to speak in depth for about a half hour tonight around 9:30 EST. Thanks in advance!',
       solved: false,
       createdAt: 2018-03-02T18:31:35.000Z,
       updatedAt: 2018-03-02T18:31:35.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 41,
       body: 'So I\'ve been steadily (and unintentionally) losing weight over the past year, and am down from ~185 to ~175 (I\'m a 6"3 male). Finally went to see a nutritionist this week to figure out why and she basically told me it\'s due to under eating. I have been averaging 2300 calories a day but need to be around 3200.\n\nI\'ve been trying to eat more the past few days but adding 1,000 calories (of healthy/homemade food) has been harder than I thought, and I feel like I\'m just stuffing my face all day long. Any body have tips or advice on how to do so that doesn\'t involve crushing Pasta and PB&Js all day long.',
       solved: false,
       createdAt: 2018-03-02T18:32:48.000Z,
       updatedAt: 2018-03-02T18:32:48.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 42,
       body: 'My professor accused me of plagiarism and gave me a 0% on my final essay and my grade dropped 20 points. I didn’t cheat at all, what can I do?\n\nI sent him an email saying that I am confused about his choice to give me a zero. I asked him to please reconsider or let me rewrite the paper. I’m just confused because I worked really hard on it and I even ran it through a plagiarism checker and it came back as original. If he refuses what Can I do? I don’t think that’s fair.\n\nHe said he believes I used outside sources outside of the required reading, but I didn’t. I told him that in my lit class we are literally covering the same topic, so perhaps I meshed the two topics? I am frazzled. I’m on a SAP and if I fail I loose financial aid.',
       solved: false,
       createdAt: 2018-03-02T18:36:28.000Z,
       updatedAt: 2018-03-02T18:36:28.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 43,
       body: 'My wife just found out her federal student loans, that she thought was being deferred, have just been handed over to a collections agency.\n\nMy wife, over a year ago, thought she submitted three paystubs to qualify for deferment for a year. We currently work overseas, and never received an email or phone call about her loans that she hadn\'t ever actually done that. Incredibly stupid of us not to double check that everything was OK, but here we are. The first message we received (sent to her mother, which we have listed as our physical address in the US) was that her loans had been sent to a collections agency. Her loans are about 22k. Is there anything that we can do to properly get her loans deferred, or is it too late at this point and we just have to deal with a collections agency?',
       solved: false,
       createdAt: 2018-03-02T18:38:07.000Z,
       updatedAt: 2018-03-02T18:38:07.000Z,
       CategoryId: 1,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 44,
       body: 'She (21F) checks her phone constantly when she\'s with me (21M) but takes hours to respond to me.\n\nIt\'s been a couple months (I\'m not really keeping track, it\'s been weird) and despite the fact that I feel like we\'ve spoken about this multiple times, I don\'t really notice any improvement.\n\nShe checks her phone nearly every time it buzzes when we\'re together, plays games/scrolls social media if she gets bored. She even did this on Valentine\'s Day.\n\nBut this isn\'t the issue, I\'m on my phone sometimes too, I don\'t care. The issue is that it feels like she intentionally ignores my messages for hours, or she\'ll read them and just never reply?\n\nIt\'s gotten to the point where I feel crazy for wanting communication. How do I stop caring about this? I want to be \'chill\' and not be so upset by it.',
       solved: false,
       createdAt: 2018-03-02T18:45:29.000Z,
       updatedAt: 2018-03-02T18:45:29.000Z,
       CategoryId: 3,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 45,
       body: 'I\'m 28 and just beginning college. Am I too old for this? I went to community college for an art degree when I was 18-20. I dropped out because I knew it wasn\'t what I wanted. I ended up completely wasting the next 8 years of my life in restaurants.\n\nI\'m currently focused on raising my GPA so I can get into an engineering program. It will take me a year to raise my GPA to the appropriate level. It will then be a 4 year program for mechanical engineering. I am going to be 34 when I graduate. No one will want to employ a 34 year old engineer over a 22 year old. I\'m super depressed, I hate that I wasted such important years. I\'m debating weather or not it\'s even worth it at this point.',
       solved: false,
       createdAt: 2018-03-02T18:51:25.000Z,
       updatedAt: 2018-03-02T18:51:25.000Z,
       CategoryId: 5,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 46,
       body: 'My cousin has a mental disorder and my family is stubborn and thinks it’s a demon. She appears to have schizophrenia and needs immediate help. The problem is that her family believes they have to go to church and pray it away. Some of my family members have already tried telling them to get her into therapy or something but they ignore all advice. I’m 15 so I don’t have much influence on what goes on so I wanted to know if there’s something legal I can do to get her mandatory medical attention',
       solved: false,
       createdAt: 2018-03-02T19:13:24.000Z,
       updatedAt: 2018-03-02T19:13:24.000Z,
       CategoryId: 6,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 47,
       body: 'How can I [15M] tell my family that I don’t believe in Christianity/God? My family is really religious and they always hassle me about not going to church and not praising/praying to god. I have UC (Ulcerative Colitis) and they always tell me “you should be thanking god that you’re in remission. It’s not just the medicine that helps you get better”. I don’t believe in that stuff and I don’t care if you do. Believe in what you want, I’ll respect it regardless. So how would I tell my family that I’m not religious and don’t believe in god?',
       solved: false,
       createdAt: 2018-03-02T19:14:30.000Z,
       updatedAt: 2018-03-02T19:14:30.000Z,
       CategoryId: 2,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] },
  Thread {
    dataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _previousDataValues: 
     { id: 48,
       body: 'I\'m wanting to lose some weight. I\'m thinking around 2-3lbs a week until around 175-180lbs depending on how I feel, but I would like to maintain muscle as much as possible. I\'m wanting to lose weight because it will make my job easier.\n\nI\'m 6"2 at 195lbs I\'m assuming 25-28% body fat. I am thinking about dropping my calories too 1800, my macros will be 182gp, 155gc, 47gf.\n\nI will be lifting every other day for around an hour to hour and twenty minutes, I have a set amount of reps/weight I\'ll be lifting and if I can\'t achieve it I\'ll adjust my calories.\n\nThen in between my lift days I will be cycling for 30min (300 calories will be burn on cycling)\n\nShould I bump my calories to 2100 calories because of the cycling or stay at 1800?\n\nWhat are your thoughts?',
       solved: false,
       createdAt: 2018-03-02T19:17:06.000Z,
       updatedAt: 2018-03-02T19:17:06.000Z,
       CategoryId: 4,
       UserId: 5,
       User: [Object],
       Replies: [] },
    _changed: {},
    _modelOptions: 
     { timestamps: true,
       validate: {},
       freezeTableName: false,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       indexes: [],
       name: [Object],
       omitNull: false,
       sequelize: [Object],
       hooks: {},
       uniqueKeys: {} },
    _options: 
     { isNewRecord: false,
       _schema: null,
       _schemaDelimiter: '',
       include: [Array],
       includeNames: [Array],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Array],
       raw: true },
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    User: 
     User {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false },
    Replies: [] } ]
/api/threads/27 get request received
/api/threads/23 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
/api/threads/29 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
/api/threads/30 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
/api/threads/31 get request received
/api/threads/32 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
/api/threads/35 get request received
/api/threads/34 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
/api/threads/36 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
/api/threads/37 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
/api/threads/39 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
/api/threads/40 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
/api/threads/41 get request received
/api/threads/42 get request received
/api/threads/44 get request received
/api/threads/43 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
/api/threads/45 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
/api/threads/46 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
/api/threads/47 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T19_55_02_044Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 19:55:08 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `w3cebsgum5p7xrdx`
App listening on PORT 3000

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 19:55:26 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `w3cebsgum5p7xrdx`
App listening on PORT 80
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T19_55_29_397Z-debug.log

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T19_55_29_399Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 19:55:32 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `w3cebsgum5p7xrdx`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `w3cebsgum5p7xrdx`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads/1 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`CategoryId` = '1';
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T19_55_58_254Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 19:56:04 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T19_59_08_363Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 19:59:10 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T20_01_34_070Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 20:01:36 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 20:01:58 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::80
    at Object._errnoException (util.js:1022:11)
    at _exceptionWithHostPort (util.js:1044:20)
    at Server.setupListenHandle [as _listen2] (net.js:1351:14)
    at listenInCluster (net.js:1392:12)
    at Server.listen (net.js:1476:7)
    at Function.listen (/var/www/seven_brackets/node_modules/express/lib/application.js:618:24)
    at /var/www/seven_brackets/server.js:41:7
    at tryCatcher (/var/www/seven_brackets/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/var/www/seven_brackets/node_modules/bluebird/js/release/promise.js:693:18)
    at Async._drainQueue (/var/www/seven_brackets/node_modules/bluebird/js/release/async.js:133:16)
    at Async._drainQueues (/var/www/seven_brackets/node_modules/bluebird/js/release/async.js:143:10)
    at Immediate.Async.drainQueues [as _onImmediate] (/var/www/seven_brackets/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:789:20)
    at tryOnImmediate (timers.js:751:5)
    at processImmediate [as _immediateCallback] (timers.js:722:5)
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T20_01_58_435Z-debug.log
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T20_02_05_926Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 20:02:13 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T20_06_43_247Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 20:06:45 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads/23 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/29 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
/api/threads/30 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
/api/threads/31 get request received
/api/threads/32 get request received
/api/threads/34 get request received
/api/threads/35 get request received
/api/threads/36 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
/api/threads/37 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
/api/threads/39 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
/api/threads/40 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
/api/threads/41 get request received
/api/threads/42 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
/api/threads/43 get request received
/api/threads/44 get request received
/api/threads/45 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
/api/threads/46 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
/api/threads/47 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T20_09_56_936Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 20:10:00 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads/23 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/29 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
/api/threads/30 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
/api/threads/31 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
/api/threads/32 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
/api/threads/34 get request received
/api/threads/35 get request received
/api/threads/36 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
/api/threads/37 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
/api/threads/39 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
/api/threads/40 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
/api/threads/41 get request received
/api/threads/42 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
/api/threads/43 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
/api/threads/44 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
/api/threads/46 get request received
/api/threads/45 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
/api/threads/47 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
/ get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads/23 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/29 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
/api/threads/30 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
/api/threads/31 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
/api/threads/32 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
/api/threads/34 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
/api/threads/35 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
/api/threads/36 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
/api/threads/37 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
/api/threads/39 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
/api/threads/40 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
/api/threads/41 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
/api/threads/42 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
/api/threads/43 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
/api/threads/44 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
/api/threads/45 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
/api/threads/46 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
/api/threads/47 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads/23 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/29 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
/api/threads/30 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
/api/threads/31 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
/api/threads/32 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
/api/threads/34 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
/api/threads/35 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
/api/threads/36 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
/api/threads/37 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
/api/threads/39 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
/api/threads/40 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
/api/threads/42 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
/api/threads/41 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
/api/threads/43 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
/api/threads/44 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
/api/threads/45 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
/api/threads/46 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
/api/threads/47 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads/23 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/29 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
/api/threads/30 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
/api/threads/31 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
/api/threads/32 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
/api/threads/34 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
/api/threads/35 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
/api/threads/36 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
/api/threads/37 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
/api/threads/39 get request received
/api/threads/40 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
/api/threads/41 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
/api/threads/42 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
/api/threads/43 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
/api/threads/44 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
/api/threads/45 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
/api/threads/46 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
/api/threads/47 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
/ get request received
/ get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads/23 get request received
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/30 get request received
/api/threads/29 get request received
/api/threads/31 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
/api/threads/32 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
/api/threads/34 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
/api/threads/35 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
/api/threads/36 get request received
/api/threads/37 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
/api/threads/39 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
/api/threads/40 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
/api/threads/41 get request received
/api/threads/42 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
/api/threads/43 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
/api/threads/44 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
/api/threads/46 get request received
/api/threads/45 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
/api/threads/47 get request received
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
/profile get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads/23 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/29 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
/api/threads/32 get request received
/api/threads/31 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
/api/threads/30 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
/api/threads/36 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
/api/threads/34 get request received
/api/threads/35 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
/api/threads/37 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
/api/threads/39 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
/api/threads/40 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
/api/threads/41 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
/api/threads/43 get request received
/api/threads/42 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
/api/threads/44 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
/api/threads/45 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
/api/threads/46 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
/api/threads/47 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
/profile get request received
/threads/modal get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/threads/modal get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads/23 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
/api/threads/29 get request received
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/30 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
/api/threads/32 get request received
/api/threads/31 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
/api/threads/34 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
/api/threads/36 get request received
/api/threads/35 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
/api/threads/37 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
/api/threads/40 get request received
/api/threads/39 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
/api/threads/42 get request received
/api/threads/44 get request received
/api/threads/41 get request received
/api/threads/43 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
/api/threads/45 get request received
/api/threads/46 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
/api/threads/47 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads/23 get request received
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/29 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
/api/threads/31 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
/api/threads/30 get request received
/api/threads/32 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
/api/threads/34 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
/api/threads/35 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
/api/threads/36 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
/api/threads/37 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
/api/threads/39 get request received
/api/threads/40 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
/api/threads/41 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
/api/threads/42 get request received
/api/threads/43 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
/api/threads/44 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
/api/threads/47 get request received
/api/threads/45 get request received
/api/threads/46 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads/23 get request received
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/29 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
/api/threads/30 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
/api/threads/31 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
/api/threads/32 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
/api/threads/34 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
/api/threads/35 get request received
/api/threads/36 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
/api/threads/37 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
/api/threads/39 get request received
/api/threads/40 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
/api/threads/41 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
/api/threads/42 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
/api/threads/43 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
/api/threads/44 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
/api/threads/45 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
/api/threads/47 get request received
/api/threads/46 get request received
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
Executing (default): SELECT `id`, `userName`, `rating`, `fbtoken`, `img_url`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = '7';
Executing (default): SELECT `id`, `userName`, `rating`, `fbtoken`, `img_url`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = '5';
/ get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads/23 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/30 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
/api/threads/29 get request received
/api/threads/31 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
/api/threads/32 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
/api/threads/34 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
/api/threads/35 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
/api/threads/36 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
/api/threads/37 get request received
/api/threads/39 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
/api/threads/41 get request received
/api/threads/40 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
/api/threads/42 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
/api/threads/43 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
/api/threads/44 get request received
/api/threads/45 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
/api/threads/46 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
/api/threads/47 get request received
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
Executing (default): SELECT `id`, `userName`, `rating`, `fbtoken`, `img_url`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = '5';
Executing (default): SELECT `id`, `userName`, `rating`, `fbtoken`, `img_url`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = '7';
/profile get request received
/ get request received
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T23_08_26_720Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 23:08:29 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80
/ get request received
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads/23 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
/api/threads/27 get request received
/api/threads/29 get request received
/api/threads/30 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
/api/threads/32 get request received
/api/threads/31 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
/api/threads/34 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
/api/threads/35 get request received
/api/threads/36 get request received
/api/threads/37 get request received
/api/threads/39 get request received
/api/threads/40 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
/api/threads/41 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
/api/threads/42 get request received
/api/threads/43 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
/api/threads/44 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
/api/threads/45 get request received
/api/threads/46 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
/api/threads/47 get request received
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
Executing (default): SELECT `id`, `userName`, `rating`, `fbtoken`, `img_url`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = '5';
Executing (default): SELECT `id`, `userName`, `rating`, `fbtoken`, `img_url`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = '7';
Executing (default): SELECT `id`, `userName`, `rating`, `fbtoken`, `img_url`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = '5';
Terminated
npm ERR! code ELIFECYCLE
npm ERR! errno 143
npm ERR! seven_brackets@1.0.0 start: `node server.js`
npm ERR! Exit status 143
npm ERR! 
npm ERR! Failed at the seven_brackets@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-03-02T23_09_53_586Z-debug.log

> seven_brackets@1.0.0 start /var/www/seven_brackets
> node server.js

Fri, 02 Mar 2018 23:09:55 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `Allies` (`id` INTEGER NOT NULL auto_increment , `Ally1` INTEGER NOT NULL, `Ally2` INTEGER NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Allies` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Categories` (`id` INTEGER NOT NULL auto_increment , `categoryName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Categories` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER NOT NULL auto_increment , `userName` VARCHAR(255) NOT NULL, `rating` DECIMAL(3,2), `fbtoken` VARCHAR(255) NOT NULL, `img_url` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Users` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Threads` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `solved` TINYINT(1) NOT NULL DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `CategoryId` INTEGER, `UserId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`CategoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Threads` FROM `seven_brackets`
Executing (default): CREATE TABLE IF NOT EXISTS `Replies` (`id` INTEGER NOT NULL auto_increment , `body` TEXT NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `UserId` INTEGER NOT NULL, `ThreadId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`UserId`) REFERENCES `Users` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE, FOREIGN KEY (`ThreadId`) REFERENCES `Threads` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Replies` FROM `seven_brackets`
App listening on PORT 80
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads/23 get request received
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/29 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
/api/threads/30 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
/api/threads/31 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
/api/threads/32 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
/api/threads/34 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
/api/threads/35 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
/api/threads/36 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
/api/threads/37 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
/api/threads/39 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
/api/threads/41 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
/api/threads/40 get request received
/api/threads/42 get request received
/api/threads/43 get request received
/api/threads/44 get request received
/api/threads/45 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
/api/threads/46 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
/api/threads/47 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
Executing (default): SELECT `id`, `userName`, `rating`, `fbtoken`, `img_url`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = '5';
Executing (default): SELECT `id`, `userName`, `rating`, `fbtoken`, `img_url`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = '7';
/threads get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId`;
/api/threads/23 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '23';
/api/threads/27 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '27';
/api/threads/29 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '29';
/api/threads/30 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '30';
/api/threads/32 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '32';
/api/threads/31 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '31';
/api/threads/34 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '34';
/api/threads/36 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '36';
/api/threads/35 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '35';
/api/threads/37 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '37';
/api/threads/40 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '40';
/api/threads/39 get request received
/api/threads/41 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '39';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '41';
/api/threads/42 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '42';
/api/threads/43 get request received
/api/threads/44 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '43';
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '44';
/api/threads/45 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '45';
/api/threads/47 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '47';
/api/threads/46 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '46';
/api/threads/48 get request received
Executing (default): SELECT `Thread`.`id`, `Thread`.`body`, `Thread`.`solved`, `Thread`.`createdAt`, `Thread`.`updatedAt`, `Thread`.`CategoryId`, `Thread`.`UserId`, `User`.`id` AS `User.id`, `User`.`userName` AS `User.userName`, `User`.`rating` AS `User.rating`, `User`.`fbtoken` AS `User.fbtoken`, `User`.`img_url` AS `User.img_url`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `Replies`.`id` AS `Replies.id`, `Replies`.`body` AS `Replies.body`, `Replies`.`createdAt` AS `Replies.createdAt`, `Replies`.`updatedAt` AS `Replies.updatedAt`, `Replies`.`UserId` AS `Replies.UserId`, `Replies`.`ThreadId` AS `Replies.ThreadId` FROM `Threads` AS `Thread` LEFT OUTER JOIN `Users` AS `User` ON `Thread`.`UserId` = `User`.`id` LEFT OUTER JOIN `Replies` AS `Replies` ON `Thread`.`id` = `Replies`.`ThreadId` WHERE `Thread`.`id` = '48';
Executing (default): SELECT `id`, `userName`, `rating`, `fbtoken`, `img_url`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = '7';
Executing (default): SELECT `id`, `userName`, `rating`, `fbtoken`, `img_url`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = '5';
